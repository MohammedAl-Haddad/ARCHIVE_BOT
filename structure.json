{
  "metadata": {
    "version": 1,
    "generatedAt": "2025-09-01T17:10:53.147Z"
  },
  "tree": {
    "name": "ARCHIVE_BOT",
    "path": ".",
    "kind": "dir",
    "description": "ARCHIVE_BOT directory.",
    "children": [
      {
        "name": "bot",
        "path": "bot",
        "kind": "dir",
        "description": "bot directory.",
        "children": [
          {
            "name": "config",
            "path": "bot/config",
            "kind": "dir",
            "description": "config directory.",
            "children": [
              {
                "name": "__init__.py",
                "path": "bot/config/__init__.py",
                "kind": "file",
                "description": "Configuration facade: provides `config` object and back-compat globals.",
                "sizeBytes": 888,
                "lines": 35,
                "language": "Python"
              },
              {
                "name": "config.py",
                "path": "bot/config/config.py",
                "kind": "file",
                "description": "bot/config/config.py",
                "sizeBytes": 2513,
                "lines": 80,
                "language": "Python"
              },
              {
                "name": "constants.py",
                "path": "bot/config/constants.py",
                "kind": "file",
                "description": "Non-secret configuration constants.",
                "sizeBytes": 94,
                "lines": 6,
                "language": "Python"
              },
              {
                "name": "dec.md",
                "path": "bot/config/dec.md",
                "kind": "file",
                "description": "توثيق: bot/config/constants.py",
                "sizeBytes": 8266,
                "lines": 187,
                "language": "Markdown"
              }
            ]
          },
          {
            "name": "db",
            "path": "bot/db",
            "kind": "dir",
            "description": "db directory.",
            "children": [
              {
                "name": "__init__.py",
                "path": "bot/db/__init__.py",
                "kind": "file",
                "description": "Unified DB package with convenient re-exports.",
                "sizeBytes": 1086,
                "lines": 39,
                "language": "Python"
              },
              {
                "name": "admins.py",
                "path": "bot/db/admins.py",
                "kind": "file",
                "description": "Permission bit flags",
                "sizeBytes": 5705,
                "lines": 189,
                "language": "Python"
              },
              {
                "name": "base.py",
                "path": "bot/db/base.py",
                "kind": "file",
                "description": "Apply additive schema updates (DB v2).",
                "sizeBytes": 5464,
                "lines": 156,
                "language": "Python"
              },
              {
                "name": "groups.py",
                "path": "bot/db/groups.py",
                "kind": "file",
                "description": "INSERT INTO groups (tg_chat_id, title, level_id, term_id) VALUES (?, ?, ?, ?) ON CONFLICT(tg_chat_id) DO UPDATE SET title=excluded.title, level_id=excluded.level_id, term_id=excluded.term_id",
                "sizeBytes": 1440,
                "lines": 44,
                "language": "Python"
              },
              {
                "name": "ingestions.py",
                "path": "bot/db/ingestions.py",
                "kind": "file",
                "description": "INSERT INTO ingestions ( tg_message_id, admin_id, status, action, file_unique_id ) VALUES (?, ?, ?, ?, ?)",
                "sizeBytes": 3487,
                "lines": 122,
                "language": "Python"
              },
              {
                "name": "lecturers.py",
                "path": "bot/db/lecturers.py",
                "kind": "file",
                "description": "Return id for lecturer *name*, inserting if necessary.",
                "sizeBytes": 604,
                "lines": 24,
                "language": "Python"
              },
              {
                "name": "materials.py",
                "path": "bot/db/materials.py",
                "kind": "file",
                "description": "Return title without the \"محاضرة N:\" prefix if present.",
                "sizeBytes": 19783,
                "lines": 581,
                "language": "Python"
              },
              {
                "name": "rbac.py",
                "path": "bot/db/rbac.py",
                "kind": "file",
                "description": "Return True if ``user_id`` may view the item ``kind``/``id``.  The check is performed against the ``admins`` table using the ``tg_user_id`` index.  Currently this function simply verifies that the user exists and is active in the table; callers should handle any further permission logic.",
                "sizeBytes": 763,
                "lines": 28,
                "language": "Python"
              },
              {
                "name": "seed_admins.py",
                "path": "bot/db/seed_admins.py",
                "kind": "file",
                "description": "Utility to seed admin accounts.  Currently only supports inserting the bot owner with full permissions.",
                "sizeBytes": 1329,
                "lines": 53,
                "language": "Python"
              },
              {
                "name": "subjects.py",
                "path": "bot/db/subjects.py",
                "kind": "file",
                "description": "-----------------------------------------------------------------------------",
                "sizeBytes": 9202,
                "lines": 262,
                "language": "Python"
              },
              {
                "name": "term_resources.py",
                "path": "bot/db/term_resources.py",
                "kind": "file",
                "description": "INSERT INTO term_resources (term_id, kind, tg_storage_chat_id, tg_storage_msg_id) VALUES (?, ?, ?, ?)",
                "sizeBytes": 1015,
                "lines": 40,
                "language": "Python"
              },
              {
                "name": "topics.py",
                "path": "bot/db/topics.py",
                "kind": "file",
                "description": "SELECT t.subject_id, s.name, t.section FROM topics t JOIN groups g ON g.id = t.group_id JOIN subjects s ON s.id = t.subject_id WHERE g.tg_chat_id=? AND t.tg_topic_id=?",
                "sizeBytes": 2301,
                "lines": 71,
                "language": "Python"
              },
              {
                "name": "years.py",
                "path": "bot/db/years.py",
                "kind": "file",
                "description": "Return id for *name*, inserting a new year if needed.",
                "sizeBytes": 522,
                "lines": 21,
                "language": "Python"
              }
            ]
          },
          {
            "name": "handlers",
            "path": "bot/handlers",
            "kind": "dir",
            "description": "handlers directory.",
            "children": [
              {
                "name": "__init__.py",
                "path": "bot/handlers/__init__.py",
                "kind": "file",
                "description": "Convenience re-exports for handler callables.",
                "sizeBytes": 936,
                "lines": 35,
                "language": "Python"
              },
              {
                "name": "admins.py",
                "path": "bot/handlers/admins.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 8960,
                "lines": 237,
                "language": "Python"
              },
              {
                "name": "approvals.py",
                "path": "bot/handlers/approvals.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 5764,
                "lines": 161,
                "language": "Python"
              },
              {
                "name": "groups.py",
                "path": "bot/handlers/groups.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 5580,
                "lines": 163,
                "language": "Python"
              },
              {
                "name": "ingestion.py",
                "path": "bot/handlers/ingestion.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 14304,
                "lines": 432,
                "language": "Python"
              },
              {
                "name": "misc.py",
                "path": "bot/handlers/misc.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 1495,
                "lines": 48,
                "language": "Python"
              },
              {
                "name": "moderation.py",
                "path": "bot/handlers/moderation.py",
                "kind": "file",
                "description": "Delete messages from users without posting rights.  If a user who is not permitted to send messages posts in a group, the message is removed and a private explanation is sent to the user.",
                "sizeBytes": 1247,
                "lines": 49,
                "language": "Python"
              },
              {
                "name": "navigation_tree.py",
                "path": "bot/handlers/navigation_tree.py",
                "kind": "file",
                "description": "Handlers for exploring the navigation tree via inline keyboards.",
                "sizeBytes": 6666,
                "lines": 199,
                "language": "Python"
              },
              {
                "name": "start.py",
                "path": "bot/handlers/start.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 672,
                "lines": 19,
                "language": "Python"
              },
              {
                "name": "topics.py",
                "path": "bot/handlers/topics.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 8654,
                "lines": 233,
                "language": "Python"
              }
            ]
          },
          {
            "name": "jobs",
            "path": "bot/jobs",
            "kind": "dir",
            "description": "jobs directory.",
            "children": [
              {
                "name": "__init__.py",
                "path": "bot/jobs/__init__.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 78,
                "lines": 6,
                "language": "Python"
              },
              {
                "name": "cleanup.py",
                "path": "bot/jobs/cleanup.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 253,
                "lines": 12,
                "language": "Python"
              }
            ]
          },
          {
            "name": "keyboards",
            "path": "bot/keyboards",
            "kind": "dir",
            "description": "keyboards directory.",
            "children": [
              {
                "name": "builders",
                "path": "bot/keyboards/builders",
                "kind": "dir",
                "description": "builders directory.",
                "children": [
                  {
                    "name": "__init__.py",
                    "path": "bot/keyboards/builders/__init__.py",
                    "kind": "file",
                    "description": "Python source file.",
                    "sizeBytes": 10449,
                    "lines": 298,
                    "language": "Python"
                  },
                  {
                    "name": "paginated.py",
                    "path": "bot/keyboards/builders/paginated.py",
                    "kind": "file",
                    "description": "Build a paginated inline keyboard for navigation children.  Parameters ---------- children: Sequence of triples ``(kind, id, label)`` describing each child node. page: One-based page number to render. per_page: Number of items to show per page.  Defaults to the global :data:`PER_PAGE` configuration value when ``None``.",
                    "sizeBytes": 1710,
                    "lines": 61,
                    "language": "Python"
                  }
                ]
              },
              {
                "name": "__init__.py",
                "path": "bot/keyboards/__init__.py",
                "kind": "file",
                "description": "Re-export common keyboard builders.",
                "sizeBytes": 131,
                "lines": 5,
                "language": "Python"
              },
              {
                "name": "admins.py",
                "path": "bot/keyboards/admins.py",
                "kind": "file",
                "description": "Create an inline keyboard to toggle available admin permissions.",
                "sizeBytes": 734,
                "lines": 23,
                "language": "Python"
              }
            ]
          },
          {
            "name": "navigation",
            "path": "bot/navigation",
            "kind": "dir",
            "description": "navigation directory.",
            "children": [
              {
                "name": "__init__.py",
                "path": "bot/navigation/__init__.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 114,
                "lines": 6,
                "language": "Python"
              },
              {
                "name": "nav_stack.py",
                "path": "bot/navigation/nav_stack.py",
                "kind": "file",
                "description": "Key used to store the navigation stack in ``context.user_data``",
                "sizeBytes": 1695,
                "lines": 53,
                "language": "Python"
              },
              {
                "name": "tree.py",
                "path": "bot/navigation/tree.py",
                "kind": "file",
                "description": "---------------------------------------------------------------------------",
                "sizeBytes": 4713,
                "lines": 144,
                "language": "Python"
              }
            ]
          },
          {
            "name": "parser",
            "path": "bot/parser",
            "kind": "dir",
            "description": "parser directory.",
            "children": [
              {
                "name": "__init__.py",
                "path": "bot/parser/__init__.py",
                "kind": "file",
                "description": "Return the Hijri year found in *text* or ``None`` if absent.  The parser normalises Arabic digits and ignores direction markers. Only years in the range 1300–1600 are considered valid.",
                "sizeBytes": 792,
                "lines": 26,
                "language": "Python"
              },
              {
                "name": "hashtags.py",
                "path": "bot/parser/hashtags.py",
                "kind": "file",
                "description": "Parsing utilities for hashtag based ingestion.  The new ingestion flow relies solely on plain text contained in the caption or message body.  ``telegram`` entities are intentionally ignored so the parsing logic here works with raw text only.  The helpers normalise hidden direction markers, convert Eastern Arabic digits to their Latin representation and then extract structured information from the ordered list of hashtags.  The parser understands a small, fixed set of Arabic hashtags that indicate the *content type* in addition to generic tags for the lecture number, year and lecturer name.  The order of these tags is significant and is validated according to the rules described in :mod:`README`.",
                "sizeBytes": 9117,
                "lines": 241,
                "language": "Python"
              }
            ]
          },
          {
            "name": "utils",
            "path": "bot/utils",
            "kind": "dir",
            "description": "utils directory.",
            "children": [
              {
                "name": "__init__.py",
                "path": "bot/utils/__init__.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 0,
                "lines": 1,
                "language": "Python"
              },
              {
                "name": "conv.py",
                "path": "bot/utils/conv.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 610,
                "lines": 25,
                "language": "Python"
              },
              {
                "name": "formatting.py",
                "path": "bot/utils/formatting.py",
                "kind": "file",
                "description": "Return Arabic ordinal word for *n* if known.",
                "sizeBytes": 1441,
                "lines": 50,
                "language": "Python"
              },
              {
                "name": "logging.py",
                "path": "bot/utils/logging.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 199,
                "lines": 10,
                "language": "Python"
              },
              {
                "name": "retry.py",
                "path": "bot/utils/retry.py",
                "kind": "file",
                "description": "Execute ``func`` with retry on failure.  Parameters ---------- func: Callable[..., Awaitable] Asynchronous function to execute. attempts: int Maximum number of attempts before giving up. base_delay: float Initial delay in seconds for exponential backoff. exceptions: Tuple[Type[Exception], ...] Exceptions that trigger a retry. logger: logging.Logger | None Optional logger for warnings.",
                "sizeBytes": 1178,
                "lines": 41,
                "language": "Python"
              },
              {
                "name": "telegram.py",
                "path": "bot/utils/telegram.py",
                "kind": "file",
                "description": "Return a link to a message in the archive channel.  If a public ``username`` is provided, build a public t.me link. Otherwise, fall back to the private ``t.me/c`` format using the internal channel ID. If ``archive_chat_id`` is falsy, ``None`` is returned.",
                "sizeBytes": 3047,
                "lines": 98,
                "language": "Python"
              }
            ]
          },
          {
            "name": "__init__.py",
            "path": "bot/__init__.py",
            "kind": "file",
            "description": "Python source file.",
            "sizeBytes": 0,
            "lines": 1,
            "language": "Python"
          },
          {
            "name": "__main__.py",
            "path": "bot/__main__.py",
            "kind": "file",
            "description": "Python source file.",
            "sizeBytes": 62,
            "lines": 5,
            "language": "Python"
          },
          {
            "name": "main.py",
            "path": "bot/main.py",
            "kind": "file",
            "description": "main.py",
            "sizeBytes": 3579,
            "lines": 122,
            "language": "Python"
          },
          {
            "name": "seed_loader.py",
            "path": "bot/seed_loader.py",
            "kind": "file",
            "description": "Python source file.",
            "sizeBytes": 3269,
            "lines": 117,
            "language": "Python"
          }
        ]
      },
      {
        "name": "database",
        "path": "database",
        "kind": "dir",
        "description": "Database files.",
        "children": [
          {
            "name": "init.sql",
            "path": "database/init.sql",
            "kind": "file",
            "description": "File.",
            "sizeBytes": 6263,
            "lines": 184
          }
        ]
      },
      {
        "name": "docs",
        "path": "docs",
        "kind": "dir",
        "description": "Documentation.",
        "children": [
          {
            "name": "caption_templates.md",
            "path": "docs/caption_templates.md",
            "kind": "file",
            "description": "قوالب الكابتشن",
            "sizeBytes": 1036,
            "lines": 52,
            "language": "Markdown"
          },
          {
            "name": "content-upload.md",
            "path": "docs/content-upload.md",
            "kind": "file",
            "description": "رفع المحتوى",
            "sizeBytes": 1738,
            "lines": 42,
            "language": "Markdown"
          },
          {
            "name": "group-linking.md",
            "path": "docs/group-linking.md",
            "kind": "file",
            "description": "ربط المجموعات",
            "sizeBytes": 1419,
            "lines": 26,
            "language": "Markdown"
          },
          {
            "name": "moderators_guide_ar.md",
            "path": "docs/moderators_guide_ar.md",
            "kind": "file",
            "description": "دليل المشرفين",
            "sizeBytes": 2991,
            "lines": 44,
            "language": "Markdown"
          },
          {
            "name": "navigation_tree_usage.md",
            "path": "docs/navigation_tree_usage.md",
            "kind": "file",
            "description": "استخدام شجرة التنقل",
            "sizeBytes": 2947,
            "lines": 59,
            "language": "Markdown"
          },
          {
            "name": "owner-guide.md",
            "path": "docs/owner-guide.md",
            "kind": "file",
            "description": "دليل المالك",
            "sizeBytes": 1298,
            "lines": 27,
            "language": "Markdown"
          },
          {
            "name": "user_guide_ar.md",
            "path": "docs/user_guide_ar.md",
            "kind": "file",
            "description": "دليل المستخدمين",
            "sizeBytes": 1874,
            "lines": 28,
            "language": "Markdown"
          }
        ]
      },
      {
        "name": "keyboards",
        "path": "keyboards",
        "kind": "dir",
        "description": "keyboards directory.",
        "children": [
          {
            "name": "builders",
            "path": "keyboards/builders",
            "kind": "dir",
            "description": "builders directory.",
            "children": [
              {
                "name": "__init__.py",
                "path": "keyboards/builders/__init__.py",
                "kind": "file",
                "description": "Python source file.",
                "sizeBytes": 0,
                "lines": 1,
                "language": "Python"
              }
            ]
          },
          {
            "name": "__init__.py",
            "path": "keyboards/__init__.py",
            "kind": "file",
            "description": "Python source file.",
            "sizeBytes": 0,
            "lines": 1,
            "language": "Python"
          }
        ]
      },
      {
        "name": "scripts",
        "path": "scripts",
        "kind": "dir",
        "description": "Utility scripts.",
        "children": [
          {
            "name": "check_db_import.py",
            "path": "scripts/check_db_import.py",
            "kind": "file",
            "description": "Python source file.",
            "sizeBytes": 419,
            "lines": 13,
            "language": "Python"
          },
          {
            "name": "dev_check.py",
            "path": "scripts/dev_check.py",
            "kind": "file",
            "description": "!/usr/bin/env python3",
            "sizeBytes": 502,
            "lines": 20,
            "language": "Python"
          },
          {
            "name": "generate-structure.mjs",
            "path": "scripts/generate-structure.mjs",
            "kind": "file",
            "description": "JavaScript source file.",
            "sizeBytes": 5940,
            "lines": 196,
            "language": "JavaScript"
          },
          {
            "name": "sanity_imports.py",
            "path": "scripts/sanity_imports.py",
            "kind": "file",
            "description": "!/usr/bin/env python3",
            "sizeBytes": 1240,
            "lines": 45,
            "language": "Python"
          },
          {
            "name": "smoke_checks.py",
            "path": "scripts/smoke_checks.py",
            "kind": "file",
            "description": "!/usr/bin/env python3",
            "sizeBytes": 3459,
            "lines": 93,
            "language": "Python"
          },
          {
            "name": "verify_index_usage.py",
            "path": "scripts/verify_index_usage.py",
            "kind": "file",
            "description": "Verify that important queries make use of database indexes.  This script creates an in-memory SQLite database using the schema from ``database/init.sql`` and runs ``EXPLAIN QUERY PLAN`` on a few typical queries.  The output should reference the indexes defined in the schema, confirming they will be used by SQLite.",
            "sizeBytes": 1671,
            "lines": 56,
            "language": "Python"
          }
        ]
      },
      {
        "name": "tests",
        "path": "tests",
        "kind": "dir",
        "description": "Test suite.",
        "children": [
          {
            "name": "test_duplicate_permissions.py",
            "path": "tests/test_duplicate_permissions.py",
            "kind": "file",
            "description": "Ensure required environment variables for importing bot modules",
            "sizeBytes": 2686,
            "lines": 99,
            "language": "Python"
          },
          {
            "name": "test_formatting.py",
            "path": "tests/test_formatting.py",
            "kind": "file",
            "description": "Python source file.",
            "sizeBytes": 567,
            "lines": 22,
            "language": "Python"
          },
          {
            "name": "test_hashtags.py",
            "path": "tests/test_hashtags.py",
            "kind": "file",
            "description": "Python source file.",
            "sizeBytes": 538,
            "lines": 20,
            "language": "Python"
          },
          {
            "name": "test_last_children_cache.py",
            "path": "tests/test_last_children_cache.py",
            "kind": "file",
            "description": "Python source file.",
            "sizeBytes": 1199,
            "lines": 37,
            "language": "Python"
          },
          {
            "name": "test_nav_stack.py",
            "path": "tests/test_nav_stack.py",
            "kind": "file",
            "description": "initial stack created under NAV_STACK_KEY",
            "sizeBytes": 715,
            "lines": 30,
            "language": "Python"
          },
          {
            "name": "test_navigation_tree.py",
            "path": "tests/test_navigation_tree.py",
            "kind": "file",
            "description": "Python source file.",
            "sizeBytes": 3202,
            "lines": 111,
            "language": "Python"
          },
          {
            "name": "test_paginated_keyboard.py",
            "path": "tests/test_paginated_keyboard.py",
            "kind": "file",
            "description": "two items on first page",
            "sizeBytes": 1191,
            "lines": 30,
            "language": "Python"
          },
          {
            "name": "test_parser.py",
            "path": "tests/test_parser.py",
            "kind": "file",
            "description": "Python source file.",
            "sizeBytes": 300,
            "lines": 12,
            "language": "Python"
          }
        ]
      },
      {
        "name": ".gitattributes",
        "path": ".gitattributes",
        "kind": "file",
        "description": "Auto detect text files and perform LF normalization",
        "sizeBytes": 66,
        "lines": 3
      },
      {
        "name": ".gitignore",
        "path": ".gitignore",
        "kind": "file",
        "description": "Byte-compiled / optimized / DLL files",
        "sizeBytes": 4688,
        "lines": 208
      },
      {
        "name": "data.py",
        "path": "data.py",
        "kind": "file",
        "description": "Python source file.",
        "sizeBytes": 436,
        "lines": 21,
        "language": "Python"
      },
      {
        "name": "mechatronics_archive_bot_دليل_تشغيل_ومستند_أمثلة_level_1_ar.md",
        "path": "mechatronics_archive_bot_دليل_تشغيل_ومستند_أمثلة_level_1_ar.md",
        "kind": "file",
        "description": "Mechatronics Archive Bot — دليل التشغيل ومحاكاة الأمثلة (المستوى الأول)",
        "sizeBytes": 16235,
        "lines": 407,
        "language": "Markdown"
      },
      {
        "name": "package.json",
        "path": "package.json",
        "kind": "file",
        "description": "Project configuration and dependencies.",
        "sizeBytes": 145,
        "lines": 9,
        "language": "JSON"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "kind": "file",
        "description": "Project overview and instructions.",
        "sizeBytes": 2484,
        "lines": 82,
        "language": "Markdown"
      },
      {
        "name": "requirements.txt",
        "path": "requirements.txt",
        "kind": "file",
        "description": "Text file.",
        "sizeBytes": 80,
        "lines": 7,
        "language": "Text"
      },
      {
        "name": "seed_data.json",
        "path": "seed_data.json",
        "kind": "file",
        "description": "JSON file.",
        "sizeBytes": 1108,
        "lines": 35,
        "language": "JSON"
      },
      {
        "name": "structure.json",
        "path": "structure.json",
        "kind": "file",
        "description": "JSON file.",
        "sizeBytes": 23794,
        "lines": 715,
        "language": "JSON"
      }
    ]
  }
}