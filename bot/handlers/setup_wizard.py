from __future__ import annotations
from telegram import Update
from telegram.ext import ContextTypes

async def setup_wizard_start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "ЁЯЫая╕П ╪г┘И╪з┘Е╪▒ ╪з┘Д╪е╪╣╪п╪з╪п ╪з┘Д╪к┘Б╪з╪╣┘Д┘К ╪║┘К╪▒ ┘Е╪к┘И┘Б╪▒╪й ╪и╪╣╪п.\n"
        "╪│┘К╪к┘Е ╪к╪╖┘И┘К╪▒ ┘И╪з╪м┘З╪й ╪з┘Д┘Е╪╣╪з┘Д╪м ┘Д╪з╪н┘В┘Л╪з."
    )

async def add_section(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("тЪая╕П ┘Д┘Е ┘К╪к┘Е ╪к┘Ж┘Б┘К╪░ ╪е╪╢╪з┘Б╪й ┘В╪│┘Е ╪и╪╣╪п.")

async def add_card(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("тЪая╕П ┘Д┘Е ┘К╪к┘Е ╪к┘Ж┘Б┘К╪░ ╪е╪╢╪з┘Б╪й ╪и╪╖╪з┘В╪й ╪и╪╣╪п.")

async def add_type(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("тЪая╕П ┘Д┘Е ┘К╪к┘Е ╪к┘Ж┘Б┘К╪░ ╪е╪╢╪з┘Б╪й ┘Ж┘И╪╣ ╪и╪╣╪п.")

async def add_alias(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("тЪая╕П ┘Д┘Е ┘К╪к┘Е ╪к┘Ж┘Б┘К╪░ ╪е╪╢╪з┘Б╪й ┘Е╪▒╪з╪п┘Б ╪и╪╣╪п.")

async def undo_last(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("тЪая╕П ╪з┘Д╪к╪▒╪з╪м╪╣ ╪║┘К╪▒ ┘Е╪к╪з╪н ╪н╪з┘Д┘К┘Л╪з.")

async def show_audit_log(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("тЪая╕П ╪│╪м┘Д ╪з┘Д╪к╪п┘В┘К┘В ╪║┘К╪▒ ┘Е╪к╪з╪н ╪и╪╣╪п.")
